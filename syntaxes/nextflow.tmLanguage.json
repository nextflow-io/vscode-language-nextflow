{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Nextflow",
	"scopeName": "source.nextflow",
	"keyEquivalent": "^~N",
	"patterns": [
		{
			"include": "#nextflow"
		}
	],
	"repository": {
		"nextflow": {
			"patterns": [
				{
					"include": "#function-def"
				},
				{
					"include": "#process-def"
				},
				{
					"include": "#workflow-def"
				},
				{
					"include": "#include-statement"
				},
				{
					"include": "source.nextflow-groovy"
				}
			]
		},
		"function-def": {
			"applyEndPatternLast": 1,
			"begin": "(?x:(?<=;|^|{)(?=\\s*\n  (?:\n  (?:def)\n  |\n  (?:\n  (?:\n  (?:boolean|byte|char|short|int|float|long|double)\n  |\n  (?:@?(?:[a-zA-Z]\\w*\\.)*[A-Z]+\\w*) # object type\n  )\n  [\\[\\]]*\n  (?:<.*>)?\n  ) \n  n  )\n  \\s+\n  ([^=]+\\s+)?\\w+\\s*\\(\n  ))",
			"end": "}|(?=[^{])",
			"name": "meta.definition.method.groovy",
			"patterns": [
				{
					"include": "#function-body"
				}
			]
		},
		"function-body": {
			"patterns": [
				{
					"match": "\\s"
				},
				{
					"begin": "(?=(?:\\w|<)[^\\(]*\\s+(?:[\\w$]|<)+\\s*\\()",
					"end": "(?=[\\w$]+\\s*\\()",
					"name": "meta.method.return-type.java",
					"patterns": [
						{
							"include": "source.nextflow-groovy#types"
						}
					]
				},
				{
					"begin": "([\\w$]+)\\s*\\(",
					"beginCaptures": {
						"1": {
							"name": "entity.name.function.java"
						}
					},
					"end": "\\)",
					"name": "meta.definition.method.signature.java",
					"patterns": [
						{
							"begin": "(?=[^)])",
							"end": "(?=\\))",
							"name": "meta.method.parameters.groovy",
							"patterns": [
								{
									"begin": "(?=[^,)])",
									"end": "(?=,|\\))",
									"name": "meta.method.parameter.groovy",
									"patterns": [
										{
											"match": ",",
											"name": "punctuation.definition.separator.groovy"
										},
										{
											"begin": "=",
											"beginCaptures": {
												"0": {
													"name": "keyword.operator.assignment.groovy"
												}
											},
											"end": "(?=,|\\))",
											"name": "meta.parameter.default.groovy",
											"patterns": [
												{
													"include": "source.nextflow-groovy#groovy-code"
												}
											]
										},
										{
											"include": "source.nextflow-groovy#parameters"
										}
									]
								}
							]
						}
					]
				},
				{
					"begin": "(?=<)",
					"end": "(?=\\s)",
					"name": "meta.method.paramerised-type.groovy",
					"patterns": [
						{
							"begin": "<",
							"end": ">",
							"name": "storage.type.parameters.groovy",
							"patterns": [
								{
									"include": "source.nextflow-groovy#types"
								},
								{
									"match": ",",
									"name": "punctuation.definition.seperator.groovy"
								}
							]
						}
					]
				},
				{
					"begin": "{",
					"end": "(?=})",
					"name": "meta.method.body.java",
					"patterns": [
						{
							"include": "source.nextflow-groovy#groovy-code"
						}
					]
				}
			]
		},
		"process-def": {
			"name": "process.nextflow",
			"begin": "^\\s*(process)\\s+(\\w+|\"[^\"]+\"|'[^']+')\\s*{",
			"beginCaptures": {
				"1": {
					"name": "keyword.nextflow"
				},
				"2": {
					"name": "function.nextflow"
				}
			},
			"end": "}",
			"patterns": [{
				"include": "#process-body"
			}]
		},
		"process-body": {
			"patterns": [
				{
					"name": "constant.block.nextflow",
					"match": "(?:input|output|when|script|shell|exec):"
				},
				{
					"name": "entity.name.function.nextflow",
					"match": "\\b(tuple|path|file|val|stdin|stdout)(\\(|\\s)"
				},
				{
					"include": "source.nextflow-groovy#groovy"
				}
			]
		},
		"workflow-def": {
			"name": "workflow.nextflow",
			"begin": "^\\s*(workflow)(?:\\s+(\\w+|\"[^\"]+\"|'[^']+'))?\\s*{",
			"beginCaptures": {
				"1": {
					"name": "keyword.nextflow"
				},
				"2": {
					"name": "constant.nextflow"
				}
			},
			"end": "}",
			"patterns": [{
				"include": "#workflow-body"
			}]	
		},
		"workflow-body": {
			"patterns": [
				{
					"name": "constant.block.nextflow",
					"match": "(?:take|main|emit):"
				},
				{
					"include": "source.nextflow-groovy#groovy"
				}
			]
		},
		"include-statement": {
			"patterns": [
				{
					"match": "^\\b(include)\\b",
					"name": "keyword.nextflow"
				},
				{
					"match": "\\b(from)\\b",
					"name": "keyword.nextflow"
				}
			]
		}
	}
}